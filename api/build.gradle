plugins {
    id 'org.springframework.boot' version '2.5.2'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
}

group = 'dev.jmsalcido'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {

    // Spring
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.session:spring-session-core'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // DB
    runtimeOnly 'org.postgresql:postgresql'
    implementation 'org.flywaydb:flyway-core'

    // Lombok (less verbose java)
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // Auth
    implementation 'com.auth0:java-jwt:3.18.1'

    // Exp4j
    implementation 'net.objecthunter:exp4j:0.4.8'


    // Testing
    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.1'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation "org.mockito:mockito-core:3.+"

}

tasks.named('test') {
    useJUnitPlatform()
}

// Heroku

task stage(dependsOn: ['build', 'clean'])
build.mustRunAfter clean

gradle.taskGraph.whenReady {
    taskGraph ->
        if (taskGraph.hasTask(stage)) {
            test.enabled = false
        }
}